import spacy
from spacy.matcher import Matcher, PhraseMatcher

nlp = spacy.load("en_core_web_sm")

# Create bias detection rules
matcher = Matcher(nlp.vocab)

# Detect potentially biased language patterns
bias_patterns = [
    [{"LOWER": {"IN": ["obviously", "clearly", "everyone knows"]}}],
    [{"LOWER": "all"}, {"POS": "NOUN"}, {"LOWER": "are"}],
]

for pattern in bias_patterns:
    matcher.add("BIAS_LANGUAGE", [pattern])

# Preprocessing to reduce bias
def preprocess_with_rules(text):
    doc = nlp(text)
    
    # Remove gendered pronouns if not relevant
    tokens = [token.text for token in doc 
              if token.text.lower() not in ['he', 'she', 'his', 'her']]
    
    # Normalize informal vs formal language
    # Replace slang terms, normalize capitalization
    
    return " ".join(tokens)

# Entity anonymization for privacy
def anonymize_entities(text):
    doc = nlp(text)
    anonymized = text
    
    for ent in doc.ents:
        if ent.label_ in ['PERSON', 'GPE', 'ORG']:
            anonymized = anonymized.replace(ent.text, f"[{ent.label_}]")
    
    return anonymized
